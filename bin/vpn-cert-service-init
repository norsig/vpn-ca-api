#!/usr/bin/php
<?php

/**
 * Copyright 2015 FranÃ§ois Kooman <fkooman@tuxed.net>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
require_once dirname(__DIR__).'/vendor/autoload.php';

use fkooman\VPN\EasyRsaCa;
use fkooman\Ini\IniReader;
use fkooman\VPN\PdoStorage;

try {
    $iniReader = IniReader::fromFile(
        dirname(__DIR__).'/config/config.ini'
    );

    $easyRsaPath = '/usr/share/easy-rsa/2.0';
    $easyRsaTargetConfigPath = $iniReader->v('easyRsaConfigPath');

    if (!file_exists($easyRsaTargetConfigPath)) {
        mkdir($easyRsaTargetConfigPath);
    }
    foreach (glob($easyRsaPath.'/*') as $file) {
        $fp = fileperms($file);
        copy($file, $easyRsaTargetConfigPath.'/'.basename($file));
        // also keep file permissions
        chmod($easyRsaTargetConfigPath.'/'.basename($file), $fp);
    }

    # update the 'vars' file
    $search = array(
        'export KEY_SIZE=2048',
        'export CA_EXPIRE=3650',
        'export KEY_EXPIRE=3650',
        'export KEY_COUNTRY="US"',
        'export KEY_PROVINCE="CA"',
        'export KEY_CITY="SanFrancisco"',
        'export KEY_ORG="Fort-Funston"',
        'export KEY_EMAIL="me@myhost.mydomain"',
        'export KEY_OU="MyOrganizationalUnit"',
    );
    $replace = array(
        sprintf('export KEY_SIZE=%d', $iniReader->v('ca', 'key_size')),
        sprintf('export CA_EXPIRE=%d', $iniReader->v('ca', 'ca_expire')),
        sprintf('export KEY_EXPIRE=%d', $iniReader->v('ca', 'key_expire')),
        sprintf('export KEY_COUNTRY="%s"', $iniReader->v('ca', 'key_country')),
        sprintf('export KEY_PROVINCE="%s"', $iniReader->v('ca', 'key_province')),
        sprintf('export KEY_CITY="%s"', $iniReader->v('ca', 'key_city')),
        sprintf('export KEY_ORG="%s"', $iniReader->v('ca', 'key_org')),
        sprintf('export KEY_EMAIL="%s"', $iniReader->v('ca', 'key_email')),
        sprintf('export KEY_OU="%s"', $iniReader->v('ca', 'key_ou')),
    );
    $varsFile = $easyRsaTargetConfigPath.'/vars';
    $varsContent = str_replace($search, $replace, file_get_contents($varsFile));
    file_put_contents($varsFile, $varsContent);

    $pdo = new PDO(
        $iniReader->v('PdoStorage', 'dsn'),
        $iniReader->v('PdoStorage', 'username', false),
        $iniReader->v('PdoStorage', 'password', false)
    );

    $pdoStorage = new PdoStorage($pdo);

    $ca = new EasyRsaCa($easyRsaTargetConfigPath, $pdoStorage, $iniReader->v('ca', 'key_size'));
    $ca->initCa();
} catch (Exception $e) {
    echo $e->getMessage().PHP_EOL;
    exit(1);
}
